%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                                                                   %% Point Process                                                     %%		This function converts a binary halftone to a sample of a   %%		point process. If the input image is a color halftone, pp   %%		returns a point process of each channel.                    %%                                                                   %% Synopsis:                                                         %%       Y=pp(X)                                                     %%			X=Binary halftone                                       %%           Y=Point process sample of type uint8 (logical).         %%                                                                   %% Dr. Daniel Leo Lau                                                %% Copyright June 13, 2000                                           %%                                                                   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% function Y=pp(X)if (any(X(:)~=0 & X(:)~=1))	error('X must contain only zeros and ones!');end;[M,N,C]=size(X);Y=uint8(logical(zeros(size(X))));for c=1:C	if (mean2(X(:,:,c))<=0.5)		Y(:,:,c)=X(:,:,c);	else		Y(:,:,c)=~X(:,:,c);	end;end;